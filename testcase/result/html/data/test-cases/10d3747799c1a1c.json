{
  "uid" : "10d3747799c1a1c",
  "name" : "test_alogin",
  "fullName" : "test_demo2.TestDemo2#test_alogin",
  "historyId" : "2f8d6cb02e01ad48229682220e61e969",
  "time" : {
    "start" : 1618751809698,
    "stop" : 1618751819962,
    "duration" : 10264
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <testcase.test_demo2.TestDemo2 object at 0x0000024D1B487148>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0caeab478de96dcac9a2d7fcf9e0b486\")>\n\n    @pytest.mark.run(order=1)\n    @allure.story(\"登录\")\n    @allure.step(\"成功登录\")\n    def test_alogin(self,browser):\n        # self.chrome.start().goto_main().login().creat_company()\n        #self.chrome.goto_main().goto_login().login()\n>       self.chrome.goto_main(browser).goto_login().login()\n\ntest_demo2.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\loginpage.py:16: in login\n    self.parse(\"../data/loginpage.yml\",\"goto_login\")\n..\\page\\basepage.py:102: in parse\n    self.find_and_click(step.get('locator'), step.get('value'))\n..\\page\\basepage.py:68: in find_and_click\n    self.find(locator, value).click()\n..\\page\\basepage.py:62: in find\n    return self.find_element(locator, value)\n..\\page\\basepage.py:23: in find_element\n    WebDriverWait(driver, 10).until(lambda driver: driver.find_element(*loc).is_displayed())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0caeab478de96dcac9a2d7fcf9e0b486\")>\nmethod = <function BasePage.find_element.<locals>.<lambda> at 0x0000024D1B509558>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\SeleniumProject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_TestDemo2",
    "time" : {
      "start" : 1618751809696,
      "stop" : 1618751809696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1618751807102,
      "stop" : 1618751809696,
      "duration" : 2594
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <testcase.test_demo2.TestDemo2 object at 0x0000024D1B487148>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0caeab478de96dcac9a2d7fcf9e0b486\")>\n\n    @pytest.mark.run(order=1)\n    @allure.story(\"登录\")\n    @allure.step(\"成功登录\")\n    def test_alogin(self,browser):\n        # self.chrome.start().goto_main().login().creat_company()\n        #self.chrome.goto_main().goto_login().login()\n>       self.chrome.goto_main(browser).goto_login().login()\n\ntest_demo2.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\loginpage.py:16: in login\n    self.parse(\"../data/loginpage.yml\",\"goto_login\")\n..\\page\\basepage.py:102: in parse\n    self.find_and_click(step.get('locator'), step.get('value'))\n..\\page\\basepage.py:68: in find_and_click\n    self.find(locator, value).click()\n..\\page\\basepage.py:62: in find\n    return self.find_element(locator, value)\n..\\page\\basepage.py:23: in find_element\n    WebDriverWait(driver, 10).until(lambda driver: driver.find_element(*loc).is_displayed())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0caeab478de96dcac9a2d7fcf9e0b486\")>\nmethod = <function BasePage.find_element.<locals>.<lambda> at 0x0000024D1B509558>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\SeleniumProject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "成功登录",
      "time" : {
        "start" : 1618751809698,
        "stop" : 1618751819959,
        "duration" : 10261
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\LearnProject\\SeleniumProject\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\LearnProject\\TestProject\\testcase\\test_demo2.py\", line 27, in test_alogin\n    self.chrome.goto_main(browser).goto_login().login()\n  File \"D:\\LearnProject\\TestProject\\page\\loginpage.py\", line 16, in login\n    self.parse(\"../data/loginpage.yml\",\"goto_login\")\n  File \"D:\\LearnProject\\TestProject\\page\\basepage.py\", line 102, in parse\n    self.find_and_click(step.get('locator'), step.get('value'))\n  File \"D:\\LearnProject\\TestProject\\page\\basepage.py\", line 68, in find_and_click\n    self.find(locator, value).click()\n  File \"D:\\LearnProject\\TestProject\\page\\basepage.py\", line 62, in find\n    return self.find_element(locator, value)\n  File \"D:\\LearnProject\\TestProject\\page\\basepage.py\", line 23, in find_element\n    WebDriverWait(driver, 10).until(lambda driver: driver.find_element(*loc).is_displayed())\n  File \"D:\\LearnProject\\SeleniumProject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "browser",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0caeab478de96dcac9a2d7fcf9e0b486\")>"
      } ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestDemo2::0",
    "time" : {
      "start" : 1618751820045,
      "stop" : 1618751822269,
      "duration" : 2224
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser::0",
    "time" : {
      "start" : 1618751822272,
      "stop" : 1618751822272,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "网点模块"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "suite",
    "value" : "test_demo2"
  }, {
    "name" : "subSuite",
    "value" : "TestDemo2"
  }, {
    "name" : "host",
    "value" : "DESKTOP-17T1KCH"
  }, {
    "name" : "thread",
    "value" : "21140-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_demo2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "10d3747799c1a1c.json",
  "parameterValues" : [ ]
}